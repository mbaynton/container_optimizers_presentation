---
title: "Container Optimizers Presentation"
format: revealjs
---

## Containers! {auto-animate="true"}

![](docker-container.jpg.webp){style="margin-left: auto; margin-right: auto; width: 29%"}

::: {.incremental .fig-right}
Mike Baynton<br /> Hosted Apps
:::

## Optimized Containers! {auto-animate="true"}

![](docker-container.jpg.webp){style="margin-left: 20%; width: 29%"} ![](rapid-rabit.jpg){style="margin-right: 20%; width: 30%"}

## Wait, Containers?

::: incremental
-   An easy way to get nearly any software up and running on nearly any computer.

-   All you really need to know is the name of the **container image** you want to run.

-   Instead of [installing R](https://rstudio-education.github.io/hopr/starting.html){preview-link="true"}, you could just run

    ```{bash}
    docker run -ti r-base
    ```
:::

## Containers in the cloud

In the cloud, a sea of compute needs to be paired with myriad software.

::: incremental
![](cpu.png){.absolute top="300" left="30" width="250"}

![](cpu.png){.absolute .fragment autoslide="650" top="500" left="200" width="250"} ![](cpu.png){.absolute .fragment autoslide="650" top="310" left="550" width="250"}

![](cpu.png){.absolute .fragment autoslide="650" top="225" right="30" width="250"}

![](cloud-icons/apache.png){.absolute .fragment autoslide="650" top="605" left="230" width="190"} ![](cloud-icons/envoy-horizontal-color.png){.absolute .fragment autoslide="650" top="405" left="55" width="190"} ![](cloud-icons/mysql.png){.absolute .fragment autoslide="650" top="360" right="270" width="190"}

![](cloud-icons/shiny.png){.absolute .fragment top="255" right="60" width="190"}
:::

## But there's a problem...

![](image_unpack.gif){fig-align="center"}

Downloading and extracting the image can be slow.

## Here's the cool part

Containers are so ubiquitious, you can always bet people are solving hard problems for you to improve them.

### Our heroes:

::: incremental
-   [stargz-snapshotter](https://github.com/containerd/stargz-snapshotter), the original
-   [SOCI Snapshotter](https://github.com/awslabs/soci-snapshotter), AWS-sponsored fork
:::

## How do they work?

They let the container start to run on the new computer before most of its image has downloaded.

::: fragment
![](mind-blown.png){fig-align="center"}
:::

## A little deeper

What if the software in the container tries to access a file that hasn't been downloaded yet?

-  A special filesystem pretends it knows all about that file already, but in fact
   it starts a download on-demand for the region of the container image where the requested
   file resides.

-  From the software's point of view, the data is all there, it's just suspiciously *slow...*
   
# Container optimizers and Posit

These optimizers are a little too early in development for us to use them right away,
but...

## Posit's hosted team products all use containers!

-   shinyapps.io

    -   Every application gets its own container image

We can't always have every customer application image pre-downloaded to a
server with free capacity to run it.

The person trying to view the shiny app waits a long time in this case today.

## Optimizing the optimizer

::: incremental
-  Our hero, stargz-snapshotter, includes a tool to automatically profile a container
   and record which areas of the container image are accessed right away.

-  This most critical data can be downloaded first, then the container is started.
   Remaining, less critical data continues to be downloaded in the background.
:::
